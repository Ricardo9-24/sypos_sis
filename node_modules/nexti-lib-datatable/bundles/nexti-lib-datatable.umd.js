(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('jspdf'), require('jspdf-autotable'), require('angular2-txt/Angular2-txt'), require('file-saver'), require('xlsx'), require('@angular/forms'), require('@ng-select/ng-select')) :
    typeof define === 'function' && define.amd ? define('nexti-lib-datatable', ['exports', '@angular/common', '@angular/core', 'jspdf', 'jspdf-autotable', 'angular2-txt/Angular2-txt', 'file-saver', 'xlsx', '@angular/forms', '@ng-select/ng-select'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['nexti-lib-datatable'] = {}, global.ng.common, global.ng.core, global.jsPDF, null, global.Angular2Txt, global.FileSaver, global.XLSX, global.ng.forms, global.ngSelect));
}(this, (function (exports, i1, i0, jsPDF, jspdfAutotable, Angular2Txt, FileSaver, XLSX, forms, ngSelect) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
    var EXCEL_EXTENSION = '.xlsx';
    var ExcelService = /** @class */ (function () {
        function ExcelService(datePipe, currencyPipe) {
            this.datePipe = datePipe;
            this.currencyPipe = currencyPipe;
        }
        ExcelService.prototype.exportAsExcelFile = function (data, excelFileName) {
            var formatData = this.formatData(data);
            var ws = XLSX.utils.aoa_to_sheet(formatData);
            var wscols = [
                { wch: 1 },
                { wch: 1 },
                { wch: 35 },
                { wch: 15 },
                { wch: 15 },
                { wch: 10 },
                { wch: 16 },
                { wch: 15 },
                { wch: 20 },
                { wch: 20 },
            ];
            ws['!cols'] = wscols;
            var wb = {
                Sheets: { data: ws },
                SheetNames: ['data'],
            };
            var excelBuffer = XLSX.write(wb, {
                bookType: 'xlsx',
                type: 'array',
            });
            this.saveAsExcelFile(excelBuffer, excelFileName);
        };
        ExcelService.prototype.saveAsExcelFile = function (buffer, fileName) {
            var data = new Blob([buffer], { type: EXCEL_TYPE });
            FileSaver.saveAs(data, fileName + '_' + new Date().getTime() + EXCEL_EXTENSION);
        };
        ExcelService.prototype.getTableRow = function (array, param, whiteSpace) {
            var _this = this;
            var rowsCobradas = [];
            var commonDateForStr = 'dd/MM/yyyy';
            array.forEach(function (f) {
                if (f.data.length) {
                    f.data.forEach(function (e, i) {
                        var fechaEmi = _this.datePipe.transform(e.FechaEmision, commonDateForStr);
                        var valorFact = _this.currencyPipe.transform(e.importeTotal);
                        var fechaEmiRet = _this.datePipe.transform(e.FechaEmisionRet, commonDateForStr);
                        var valorRet = _this.currencyPipe.transform(e.importeTotalRet);
                        var valorTotal = _this.currencyPipe.transform(e[param]);
                        var actualDataRow = [
                            e.Numdoc,
                            fechaEmi,
                            valorFact,
                            e.NumdocRet,
                            fechaEmiRet,
                            valorRet,
                            valorTotal,
                        ];
                        if (i == 0) {
                            rowsCobradas.push(__spread(whiteSpace, [f.rucEmpresa], actualDataRow));
                            if (f.data.length == 1) {
                                rowsCobradas.push(__spread(whiteSpace, [f.razonSocial]));
                            }
                        }
                        else if (i == 1) {
                            rowsCobradas.push(__spread(whiteSpace, [f.razonSocial], actualDataRow));
                        }
                        else {
                            rowsCobradas.push(__spread(whiteSpace, [''], actualDataRow));
                        }
                    });
                }
                var totalFact = _this.currencyPipe.transform(f.totalFact);
                var totalRet = _this.currencyPipe.transform(f.totalRet);
                var totalPagado = _this.currencyPipe.transform(f.totalPagado);
                // subtotal
                rowsCobradas.push(__spread(whiteSpace, [
                    '',
                    f.cantFact,
                    '',
                    totalFact,
                    f.cantRet,
                    '',
                    totalRet,
                    totalPagado,
                ]));
            });
            return rowsCobradas;
        };
        ExcelService.prototype.formatData = function (data) {
            var whiteSpace = ['', ''];
            var tableHeader = __spread(whiteSpace, [
                'RUC / RAZON SOCIAL',
                'Número Factura',
                'Fecha Factura',
                'Valor Factura',
                'Número Retención',
                'Fecha Retención',
                'Valor Retención',
                'Valor Total Pagado',
            ]);
            var facturasCobradas = data.cobradas;
            var facturasPagadas = data.pagadas;
            var rowsCobradas = this.getTableRow(facturasCobradas, 'totalCobrado', whiteSpace);
            var rowsPagadas = this.getTableRow(facturasPagadas, 'totalPagado', whiteSpace);
            var rowTotalCobradas = __spread(whiteSpace, [
                'TOTAL FACTURAS COBRADAS',
                data.cantCobradas,
                '',
                this.currencyPipe.transform(data.sumCobradas),
                data.cantRetCobradas,
                '',
                this.currencyPipe.transform(data.sumRetCobradas),
                this.currencyPipe.transform(data.totalCobradas),
            ]);
            var rowTotalPagadas = __spread(whiteSpace, [
                'TOTAL FACTURAS PAGADAS',
                data.cantPagadas,
                '',
                this.currencyPipe.transform(data.sumPagadas),
                data.cantRetPagadas,
                '',
                this.currencyPipe.transform(data.sumRetPagadas),
                this.currencyPipe.transform(data.totalPagadas),
            ]);
            var netoTotalFor = this.currencyPipe.transform(data.netoTotal);
            var rowNetos = __spread(whiteSpace, [
                'VALORES NETOS',
                '',
                '',
                this.currencyPipe.transform(data.netoFact),
                '',
                '',
                this.currencyPipe.transform(data.netoRet),
                netoTotalFor,
            ]);
            var rowPosicionNeta = __spread(whiteSpace, [
                'POSICION NETA DE LA EMPRESA',
                netoTotalFor,
            ]);
            var actualFormatDate = this.datePipe.transform(Date.now(), 'dd/MM/YYYY HH:mm:ss');
            return __spread([
                [],
                [],
                __spread(whiteSpace, ['SESIÓN DE COMPENSACIÓN DEFINITIVA', '', '', '', '', '', '', actualFormatDate]),
                __spread(whiteSpace, ['REPORTE POR EMPRESA PARTICIPANTE']),
                [],
                __spread(whiteSpace, ['EMPRESA :', data.Ruc, data.razonSocial, '', '', '', 'FECHA COMPENSACIÓN', data.fechaSesion]),
                [],
                __spread(whiteSpace, ['FACTURAS COBRADAS']),
                tableHeader
            ], rowsCobradas, [
                rowTotalCobradas,
                [],
                [],
                __spread(whiteSpace, ['FACTURAS PAGADAS']),
                tableHeader
            ], rowsPagadas, [
                rowTotalPagadas,
                [],
                __spread(whiteSpace, ['RESUMEN PROCESO DE COMPENSACIÓN']),
                __spread(whiteSpace, ['', 'Número Facturas', '', 'Valor Facturas', 'Número Retenciones', '', 'Valor Retenciones', 'Valor Total']),
                [],
                rowTotalCobradas,
                rowTotalPagadas,
                rowNetos,
                [],
                rowPosicionNeta,
            ]);
        };
        return ExcelService;
    }());
    ExcelService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ExcelService_Factory() { return new ExcelService(i0.ɵɵinject(i1.DatePipe), i0.ɵɵinject(i1.CurrencyPipe)); }, token: ExcelService, providedIn: "root" });
    ExcelService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    ExcelService.ctorParameters = function () { return [
        { type: i1.DatePipe },
        { type: i1.CurrencyPipe }
    ]; };

    var NumberFormat;
    (function (NumberFormat) {
        NumberFormat["NUM"] = "number";
        NumberFormat["CUR"] = "currency";
    })(NumberFormat || (NumberFormat = {}));
    var FormatType;
    (function (FormatType) {
        FormatType["NUM"] = "number";
        FormatType["CUR"] = "currency";
        FormatType["COU"] = "count";
    })(FormatType || (FormatType = {}));
    var OperationFormat;
    (function (OperationFormat) {
        OperationFormat["SUM"] = "suma";
        OperationFormat["RES"] = "resta";
    })(OperationFormat || (OperationFormat = {}));
    var TableComponent = /** @class */ (function () {
        function TableComponent(currencyPipe) {
            this.currencyPipe = currencyPipe;
            this.paginacion = false;
            this.totalRegistros = 0;
            this.actualPage = 0;
            this.multFPP = 0;
            this.onNext = new i0.EventEmitter();
            this.onReturn = new i0.EventEmitter();
            this.onDelete = new i0.EventEmitter();
            this.onUpdate = new i0.EventEmitter();
            this.onActive = new i0.EventEmitter();
            this.onShow = new i0.EventEmitter();
            this.onShowEvent = new i0.EventEmitter();
            this.footerRow = [];
            this.dataPerm$ = new Array();
            this.observableBtnDelete$ = false;
            this.observableBtnUpdate$ = false;
            this.observableBtnActive = false;
            this.filas = [];
            this.filasPorPagina = 0;
        }
        TableComponent.prototype.ngOnChanges = function (changes) {
            var data$ = changes.data$, recursos = changes.recursos;
            if ((data$ === null || data$ === void 0 ? void 0 : data$.currentValue) !== (data$ === null || data$ === void 0 ? void 0 : data$.previousValue)) {
                this.dataPerm$ = data$ === null || data$ === void 0 ? void 0 : data$.currentValue;
            }
            if ((recursos === null || recursos === void 0 ? void 0 : recursos.currentValue) !== (recursos === null || recursos === void 0 ? void 0 : recursos.previousValue)) {
                this.observableBtnUpdate$ = this.recursos.update;
                this.observableBtnDelete$ = this.recursos.delete;
                this.observableBtnActive = this.recursos.active;
            }
        };
        TableComponent.prototype.ngOnInit = function () {
            this.orderHeaderStatus = this.header.map(function (h) { return false; });
            if (this.paginacion && this.multFPP != 0) {
                this.calcFilasPorPagina();
            }
            else if (this.paginacion && this.multFPP === 0) {
                this.filasPorPagina = 10;
                this.filas.push(10);
            }
        };
        TableComponent.prototype.calcFilasPorPagina = function () {
            var cantidadFilas = 0;
            for (var index = 0; index < 10; index++) {
                cantidadFilas = cantidadFilas + this.multFPP;
                this.filas.push(cantidadFilas);
            }
            this.filasPorPagina = this.filas[0];
        };
        TableComponent.prototype.paginaSiguiente = function () {
            this.onNext.emit(this.filasPorPagina);
        };
        TableComponent.prototype.paginaAnterior = function () {
            this.onReturn.emit(this.filasPorPagina);
        };
        TableComponent.prototype.onOrderColumn = function (head, index) {
            var orderStatus = this.orderHeaderStatus[index];
            this.orderHeaderStatus[index] = !orderStatus;
            this.data$ = this.dataPerm$.sort(function (_, b) {
                if (typeof _[index] === 'object') {
                    if (_[index].title) {
                        if (_[index].title > b[index].title) {
                            return orderStatus ? 1 : -1;
                        }
                        if (_[index].title < b[index].title) {
                            return orderStatus ? -1 : 1;
                        }
                        return 0;
                    }
                    if (b[index].subtitle) {
                        if (_[index].subtitle > b[index].subtitle) {
                            return orderStatus ? 1 : -1;
                        }
                        if (_[index].subtitle < b[index].subtitle) {
                            return orderStatus ? -1 : 1;
                        }
                        return 0;
                    }
                }
                else {
                    if (_[index] > b[index]) {
                        return orderStatus ? 1 : -1;
                    }
                    if (_[index] < b[index]) {
                        return orderStatus ? -1 : 1;
                    }
                    return 0;
                }
            });
        };
        TableComponent.prototype.getFooterData = function () {
            var _this = this;
            var _a;
            var _b = this.footerConfig, customTotalTitle = _b.customTotalTitle, customTotalRows = _b.customTotalRows, customTotalFormatting = _b.customTotalFormatting, customTotalType = _b.customTotalType, customTotalAlign = _b.customTotalAlign, customTotalFixed = _b.customTotalFixed, customOperationFormatting = _b.customOperationFormatting;
            var tableFooterData = [];
            var rawData = [];
            (_a = this.data$) === null || _a === void 0 ? void 0 : _a.forEach(function (itemArray) {
                var rawDataRow = [];
                // Step 1: format - prepare dat
                var formatedData = itemArray.map(function (item) { return _this.getFormatDataToTreatment(item); });
                // Step 2: Get raw data (values to totals)
                _this.getRawData(customTotalRows, formatedData, customTotalType, rawDataRow);
                rawData.push(rawDataRow);
            });
            if (customTotalRows && customTotalRows.length && rawData.length) {
                var procesedTotals_1 = [];
                switch (customOperationFormatting) {
                    case OperationFormat.RES:
                        procesedTotals_1 = this.trasposeMatrix(rawData).map(function (itemArray) {
                            return itemArray.reduce(function (a, b) { return a - b; });
                        });
                        break;
                    default:
                        procesedTotals_1 = this.trasposeMatrix(rawData).map(function (itemArray) { return itemArray.reduce(function (a, b) { return a + b; }, 0); });
                        break;
                }
                if (customTotalFormatting && customTotalFormatting.length) {
                    procesedTotals_1 = customTotalFormatting.map(function (format, index) {
                        var value, align, fixed, less;
                        switch (format) {
                            case NumberFormat.CUR:
                                value = _this.currencyPipe.transform(procesedTotals_1[index]);
                                break;
                            default:
                                value = procesedTotals_1[index];
                                break;
                        }
                        align = customTotalAlign[index];
                        fixed = customTotalFixed[index];
                        less = procesedTotals_1[index] <= -1;
                        return {
                            value: value,
                            align: align,
                            fixed: fixed,
                            less: less,
                        };
                    });
                }
                tableFooterData = procesedTotals_1.length ? procesedTotals_1 : null;
            }
            var finalFooterData = [];
            // Clear data
            if (customTotalRows && customTotalRows.length) {
                var cont_1 = 0;
                var _loop_1 = function (i) {
                    var itemToPush;
                    customTotalRows.forEach(function (customIndex) {
                        if (customIndex === i) {
                            itemToPush = tableFooterData[cont_1];
                            cont_1++;
                        }
                    });
                    if (i === 0 && customTotalTitle) {
                        itemToPush = {
                            fixed: 'td-sticky-left title-total',
                            value: customTotalTitle,
                        };
                    }
                    if (this_1.header.length === i + 1 && !this_1.hiddenActions) {
                        itemToPush = { fixed: 'td-sticky-right' };
                    }
                    finalFooterData.push(itemToPush);
                };
                var this_1 = this;
                for (var i = 0; i < this.header.length; i++) {
                    _loop_1(i);
                }
            }
            this.footerRow = finalFooterData;
        };
        TableComponent.prototype.formatCurrencyToNumber = function (value) {
            if (value !== undefined && value !== null)
                return Number(String(value).replace(/[^0-9.-]+/g, ''));
        };
        TableComponent.prototype.trasposeMatrix = function (matrix) {
            return matrix[0].map(function (_, colIndex) { return matrix.map(function (row) { return row[colIndex]; }); });
        };
        TableComponent.prototype.toggleFilterClass = function (index) {
            return "bi " + (this.orderHeaderStatus[index] ? 'bi-caret-up-fill' : 'bi-caret-down-fill') + " icon-order";
        };
        TableComponent.prototype.isObject = function (val) {
            return typeof val === 'object';
        };
        TableComponent.prototype.getRawData = function (customTotalRows, formatedData, customTotalType, rawDataRow) {
            var _this = this;
            if (customTotalRows && customTotalRows.length) {
                customTotalRows.forEach(function (customIndex, indexCol) {
                    formatedData.forEach(function (item, index) {
                        if (customIndex === index) {
                            var returnItem_1 = 0;
                            customTotalType.forEach(function (type, indexType) {
                                if (indexCol === indexType) {
                                    switch (type) {
                                        case FormatType.NUM:
                                            if ((typeof item === 'string' &&
                                                (item == '--' || item === '')) ||
                                                typeof item === 'undefined') {
                                                returnItem_1 = 0;
                                            }
                                            else {
                                                returnItem_1 = Number(item);
                                            }
                                            break;
                                        case FormatType.CUR:
                                            if ((typeof item === 'string' &&
                                                (item == '--' || item === '')) ||
                                                typeof item === 'undefined') {
                                                returnItem_1 = 0;
                                            }
                                            else {
                                                returnItem_1 = _this.formatCurrencyToNumber(item);
                                            }
                                            break;
                                        case FormatType.COU:
                                            if ((typeof item === 'string' &&
                                                (item == '--' || item === '')) ||
                                                typeof item === 'undefined') {
                                                returnItem_1 = 0;
                                            }
                                            else {
                                                returnItem_1 = 1;
                                            }
                                            break;
                                        default:
                                            returnItem_1 = 0;
                                    }
                                }
                            });
                            rawDataRow.push(returnItem_1);
                        }
                    });
                });
            }
        };
        TableComponent.prototype.getFormatDataToTreatment = function (item) {
            if (typeof item === 'object') {
                if (item != null) {
                    if (item.title && item.subtitle) {
                        return item.title + "\n" + item.subtitle;
                    }
                    else {
                        return item.title ? item.title : item.subtitle && item.subtitle;
                    }
                }
                else {
                    return '';
                }
            }
            else {
                return item;
            }
        };
        TableComponent.prototype.onDeleteItem = function (item) {
            this.onDelete.emit(item);
        };
        TableComponent.prototype.onActiveItem = function (item) {
            this.onActive.emit(item);
        };
        TableComponent.prototype.onUpdateItem = function (item) {
            this.onUpdate.emit(item);
        };
        TableComponent.prototype.onShowItem = function (item, $event) {
            this.onShow.emit(item);
            this.onShowEvent.emit($event);
        };
        return TableComponent;
    }());
    TableComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'nexti-lib-table',
                    template: "<div class=\"content-table\">\r\n  <div class=\"content-body table-responsive\">\r\n    <table [attr.aria-label]=\"title\" aria class=\"table\" id=\"table\">\r\n      <thead class=\"table-head\">\r\n        <tr>\r\n          <ng-container *ngFor=\"let head of header; index as i\">\r\n            <ng-container *ngIf=\"isObject(head); else thsimple\">\r\n              <ng-container *ngIf=\"head?.fixedLeft === true\">\r\n                <th\r\n                  scope=\"col\"\r\n                  [ngClass]=\"{\r\n                    'th-sticky-left': true,\r\n                    alignEnd: head?.alignEnd\r\n                  }\"\r\n                >\r\n                  <div class=\"thflex\">\r\n                    <span>{{ head.title }}</span>\r\n                    <ng-container *ngIf=\"head?.order === true\">\r\n                      <i\r\n                        aria-hidden=\"true\"\r\n                        [class]=\"toggleFilterClass(i)\"\r\n                        (click)=\"onOrderColumn(head, i)\"\r\n                      ></i>\r\n                    </ng-container>\r\n                  </div>\r\n                </th>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"head?.fixedRight === true\">\r\n                <th\r\n                  scope=\"col\"\r\n                  [ngClass]=\"{\r\n                    'th-sticky-right': true,\r\n                    alignEnd: head?.alignEnd\r\n                  }\"\r\n                >\r\n                  <div class=\"thflex\">\r\n                    <span>{{ head.title }}</span>\r\n                    <ng-container *ngIf=\"head?.order === true\">\r\n                      <i\r\n                        aria-hidden=\"true\"\r\n                        [class]=\"toggleFilterClass(i)\"\r\n                        (click)=\"onOrderColumn(head, i)\"\r\n                      ></i>\r\n                    </ng-container>\r\n                  </div>\r\n                </th>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"!head?.fixedRight && !head?.fixedLeft\">\r\n                <th scope=\"col\">\r\n                  <div\r\n                    class=\"thflex\"\r\n                    [ngClass]=\"{\r\n                      alignEnd: head?.alignEnd\r\n                    }\"\r\n                  >\r\n                    <span>{{ head.title }}</span>\r\n                    <ng-container *ngIf=\"head?.order === true\">\r\n                      <i\r\n                        aria-hidden=\"true\"\r\n                        [class]=\"toggleFilterClass(i)\"\r\n                        (click)=\"onOrderColumn(head, i)\"\r\n                      ></i>\r\n                    </ng-container>\r\n                  </div>\r\n                </th>\r\n              </ng-container>\r\n            </ng-container>\r\n            <ng-template #thsimple>\r\n              <th scope=\"col\">\r\n                <span>{{ head }}</span>\r\n              </th>\r\n            </ng-template>\r\n          </ng-container>\r\n        </tr>\r\n      </thead>\r\n      <ng-container *ngIf=\"data$ && data$.length > 0\">\r\n        <tbody class=\"table-body\">\r\n          <tr *ngFor=\"let list of data$\">\r\n            <ng-container *ngFor=\"let item of list\">\r\n              <ng-container *ngIf=\"!item?.hidden\">\r\n                <ng-container *ngIf=\"isObject(item); else tdsimple\">\r\n                  <ng-container\r\n                    *ngIf=\"item?.fixedLeft || item?.fixedRight; else tdsimple\"\r\n                  >\r\n                    <ng-container\r\n                      *ngIf=\"item?.fixedLeft === true; else tdfixedright\"\r\n                    >\r\n                      <td\r\n                        [ngClass]=\"{\r\n                          'td-sticky-left': true,\r\n                          alignEnd: item?.alignEnd ? true : false\r\n                        }\"\r\n                      >\r\n                        <ng-container *ngIf=\"item?.title\">\r\n                          <a\r\n                            href=\"#\"\r\n                            *ngIf=\"item.link\"\r\n                            (click)=\"onShowItem(item, $event)\"\r\n                            data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#exampleModal\"\r\n                            [attr.data-id]=\"item?.title\"\r\n                            >{{ item?.title }}</a\r\n                          >\r\n                          <span\r\n                            [ngClass]=\"{\r\n                              title: item.link,\r\n                              warn: formatCurrencyToNumber(item?.title) <= -1\r\n                            }\"\r\n                            *ngIf=\"!item?.link\"\r\n                            >{{ item?.title }}</span\r\n                          >\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"item?.title && item?.subtitle\">\r\n                          <br />\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"item?.subtitle\">\r\n                          <span\r\n                            class=\"subtitle\"\r\n                            [ngClass]=\"{\r\n                              warn: formatCurrencyToNumber(item?.subtitle) <= -1\r\n                            }\"\r\n                            >{{ item?.subtitle }}</span\r\n                          >\r\n                        </ng-container>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-template #tdfixedright>\r\n                      <td\r\n                        [ngClass]=\"{\r\n                          'td-sticky-right': true,\r\n                          alignEnd: item?.alignEnd ? true : false\r\n                        }\"\r\n                      >\r\n                        <ng-container *ngIf=\"item?.title\">\r\n                          <a\r\n                            href=\"#\"\r\n                            *ngIf=\"item.link\"\r\n                            (click)=\"onShowItem(item, $event)\"\r\n                            data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#exampleModal\"\r\n                            [attr.data-id]=\"item?.title\"\r\n                            >{{ item?.title }}</a\r\n                          >\r\n                          <span\r\n                            [ngClass]=\"{\r\n                              title: item.link,\r\n                              warn: formatCurrencyToNumber(item?.title) <= -1\r\n                            }\"\r\n                            *ngIf=\"!item?.link\"\r\n                            >{{ item?.title }}</span\r\n                          >\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"item?.title && item?.subtitle\">\r\n                          <br />\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"item?.subtitle\">\r\n                          <span\r\n                            class=\"subtitle\"\r\n                            [ngClass]=\"{\r\n                              warn: formatCurrencyToNumber(item?.subtitle) <= -1\r\n                            }\"\r\n                            >{{ item?.subtitle }}</span\r\n                          >\r\n                        </ng-container>\r\n                      </td>\r\n                    </ng-template>\r\n                  </ng-container>\r\n                  <ng-template #tdsimple>\r\n                    <td\r\n                      [ngClass]=\"{\r\n                        alignEnd: item?.alignEnd ? true : false\r\n                      }\"\r\n                    >\r\n                      <a\r\n                        href=\"#\"\r\n                        *ngIf=\"item?.link\"\r\n                        (click)=\"onShowItem(item, $event)\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#exampleModal\"\r\n                        [attr.data-id]=\"item?.title\"\r\n                        >{{ item?.title }}</a\r\n                      >\r\n                      <span\r\n                        [ngClass]=\"{\r\n                          title: item.link,\r\n                          warn: formatCurrencyToNumber(item?.title) <= -1\r\n                        }\"\r\n                        *ngIf=\"!item?.link\"\r\n                        >{{ item?.title }}</span\r\n                      >\r\n                      <br /><span\r\n                        class=\"subtitle\"\r\n                        [ngClass]=\"{\r\n                          warn: formatCurrencyToNumber(item?.subtitle) <= -1\r\n                        }\"\r\n                        >{{ item?.subtitle }}</span\r\n                      >\r\n                    </td>\r\n                  </ng-template>\r\n                </ng-container>\r\n                <ng-template #tdsimple>\r\n                  <td\r\n                    [ngClass]=\"{\r\n                      warn: formatCurrencyToNumber(item) <= -1\r\n                    }\"\r\n                  >\r\n                    {{ item }}\r\n                  </td>\r\n                </ng-template>\r\n              </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!hiddenActions\">\r\n              <td class=\"td-sticky-right\">\r\n                <ng-container *ngIf=\"observableBtnUpdate$ && !actionState\">\r\n                  <a\r\n                    class=\"icon-actions\"\r\n                    (click)=\"onUpdateItem(list)\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#exampleModal\"\r\n                    ><i\r\n                      aria-hidden=\"true\"\r\n                      class=\"bi bi-pencil-square secondary\"\r\n                    ></i\r\n                  ></a>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"observableBtnDelete$ && !actionState\">\r\n                  <a class=\"icon-actions\" (click)=\"onDeleteItem(list)\"\r\n                    ><i aria-hidden=\"true\" class=\"bi bi-trash primary\"></i\r\n                  ></a>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"observableBtnActive && actionState\">\r\n                  <button\r\n                    (click)=\"onActiveItem(list)\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\"\r\n                  >\r\n                    Activar\r\n                  </button>\r\n                </ng-container>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot *ngIf=\"footerConfig\">\r\n          <tr>\r\n            <ng-container *ngFor=\"let item of footerRow\">\r\n              <td\r\n                [classList]=\"item?.fixed\"\r\n                [ngClass]=\"{ warn: item?.less }\"\r\n                [style]=\"item?.align\"\r\n              >\r\n                {{ item?.value }}\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tfoot>\r\n      </ng-container>\r\n    </table>\r\n    <div class=\"emptyContent\" *ngIf=\"!data$ || data$.length === 0\">\r\n      <ng-container *ngIf=\"!isLoading\">\r\n        <img class=\"icon-empty\" src=\"./assets/icons/empty.svg\" alt=\"empty\" />\r\n        <h6>{{ titleEmpty }}</h6>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"content-footer d-flex justify-content-end pt-3\"\r\n    *ngIf=\"!opOcultarFooter\"\r\n  >\r\n    <ng-container *ngIf=\"data$?.length !== undefined\">\r\n      <ng-container *ngIf=\"paginacion; else comunfooter\">\r\n        <div class=\"d-flex w-50 justify-content-end align-items-start\">\r\n          <div class=\"d-flex flex-row align-items-center\">\r\n            <h6 class=\"text-size-sm muted mx-2 mb-0\">Filas por p\u00E1gina:</h6>\r\n            <select\r\n              class=\"form-select custom-select\"\r\n              [(ngModel)]=\"filasPorPagina\"\r\n            >\r\n              <option *ngFor=\"let item of filas\" value=\"{{ item }}\">\r\n                {{ item }}\r\n              </option>\r\n            </select>\r\n            <h6 class=\"text-size-sm muted mx-2 mb-0 text-end\">\r\n              {{\r\n                data$.length ? data$.length * actualPage - data$.length + 1 : 0\r\n              }}\r\n              - {{ actualPage * data$?.length }} de\r\n              {{ totalRegistros }}\r\n            </h6>\r\n            <div class=\"\">\r\n              <i\r\n                class=\"bi bi-chevron-left mx-2 custom-chevron\"\r\n                aria-hidden=\"true\"\r\n                (click)=\"paginaAnterior()\"\r\n              ></i>\r\n              <i\r\n                class=\"bi bi-chevron-right custom-chevron\"\r\n                aria-hidden=\"true\"\r\n                (click)=\"paginaSiguiente()\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n      <ng-template #comunfooter>\r\n        <h6 class=\"text-size-sm muted\">\r\n          Mostrando {{ data$?.length }} registros\r\n        </h6>\r\n      </ng-template>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n",
                    styles: ["@import \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\";tfoot{position:sticky;bottom:0;z-index:2}tfoot td{border-collapse:initial;border-top:2px solid #0f1b32!important}.thflex{display:flex;flex-direction:row;align-items:center;justify-content:space-between}.alignEnd{justify-content:flex-end;text-align:end}.table-responsive{width:100%;overflow:auto}.table{width:100%;border-spacing:0}.table,.table-head{border-collapse:initial}.table-head{position:sticky;top:0;z-index:2}.table-head th{border-bottom:2px solid #0f1b32!important}.table-body,.table-body td,.table-head th{border-collapse:initial}.table-body td{border-bottom:1px solid #e4e9ef!important}.primary{color:#0f1b32}.secondary{color:#2a8bf2}.icon-order{cursor:pointer;padding-left:10px}th{font-weight:700;color:#0f1b32;vertical-align:middle}td,th{font-size:12px;line-height:17px;width:auto;height:50px;min-width:150px;max-width:200px;background-color:#fff}td{font-weight:500;color:#585858}.title{color:#2a8bf2}.title-total{font-weight:700}.subtitle{text-transform:uppercase}.icon-actions{font-size:15px;cursor:pointer;color:#585858}.icon-actions:nth-child(2){margin-left:15px}.text-size-sm{font-size:12px;min-width:100px}.th-sticky-left{position:sticky;left:0;z-index:3}.th-sticky-right{position:sticky;right:0;z-index:3}.td-sticky-left{position:sticky;left:0;z-index:1}.td-sticky-right{position:sticky;right:0;z-index:1}.emptyContent{position:sticky;left:0;right:0;width:100%;min-height:200px;display:flex;flex-direction:column;justify-content:center;align-items:center}h6{color:#0f1b32;font-weight:700!important}.icon-empty{font-size:75px}.warn{color:#eb5757!important}.content-table{display:grid;width:100%;height:100%;grid-template-rows:auto 1fr;grid-template-areas:\"content-body\" \"content-footer\"}.content-body{grid-area:content-body}.content-footer{grid-area:content-footer}.custom-select{padding:5px;width:60px;max-width:60px;min-width:60px}.custom-chevron{cursor:pointer}"]
                },] }
    ];
    TableComponent.ctorParameters = function () { return [
        { type: i1.CurrencyPipe }
    ]; };
    TableComponent.propDecorators = {
        title: [{ type: i0.Input }],
        titleEmpty: [{ type: i0.Input }],
        header: [{ type: i0.Input }],
        data$: [{ type: i0.Input }],
        footerConfig: [{ type: i0.Input }],
        recursos: [{ type: i0.Input }],
        actionState: [{ type: i0.Input }],
        opOcultarFooter: [{ type: i0.Input }],
        hiddenActions: [{ type: i0.Input }],
        isLoading: [{ type: i0.Input }],
        paginacion: [{ type: i0.Input }],
        totalRegistros: [{ type: i0.Input }],
        actualPage: [{ type: i0.Input }],
        multFPP: [{ type: i0.Input }],
        onNext: [{ type: i0.Output }],
        onReturn: [{ type: i0.Output }],
        onDelete: [{ type: i0.Output }],
        onUpdate: [{ type: i0.Output }],
        onActive: [{ type: i0.Output }],
        onShow: [{ type: i0.Output }],
        onShowEvent: [{ type: i0.Output }]
    };

    var NumberFormat$1;
    (function (NumberFormat) {
        NumberFormat["NUM"] = "number";
        NumberFormat["CUR"] = "currency";
    })(NumberFormat$1 || (NumberFormat$1 = {}));
    var AlignClass;
    (function (AlignClass) {
        AlignClass["LEFT"] = "text-align: start;";
        AlignClass["RIGHT"] = "text-align: end;";
    })(AlignClass || (AlignClass = {}));
    var FormatType$1;
    (function (FormatType) {
        FormatType["NUM"] = "number";
        FormatType["CUR"] = "currency";
        FormatType["DIF"] = "difference";
        FormatType["COU"] = "count";
    })(FormatType$1 || (FormatType$1 = {}));
    var NextiLibDatatableComponent = /** @class */ (function () {
        function NextiLibDatatableComponent(datePipe, currencyPipe, excelService) {
            this.datePipe = datePipe;
            this.currencyPipe = currencyPipe;
            this.excelService = excelService;
            this.titleXs = false;
            this.linkBack = false;
            this.actionState = false;
            this.paginacion = false;
            this.totalRegistros = 0;
            this.multFPP = 0;
            this.actualPage = 0;
            this.multiTable = false;
            this.sections = false;
            this.onDelete = new i0.EventEmitter();
            this.onUpdate = new i0.EventEmitter();
            this.onActive = new i0.EventEmitter();
            this.onShow = new i0.EventEmitter();
            this.onShowEvent = new i0.EventEmitter();
            this.onBack = new i0.EventEmitter();
            this.onfilter = new i0.EventEmitter();
            this.onNext = new i0.EventEmitter();
            this.onReturn = new i0.EventEmitter();
            this.data$ = new Array();
            // TODO mejorar, con un estado de header normalizado se puede prescindir de esta variable
            this.dataPerm$ = new Array();
            this.footerRow = [];
            this.filterSelected = null;
        }
        NextiLibDatatableComponent.prototype.ngOnInit = function () {
            var _this = this;
            var _a;
            (_a = this.selectFilter) === null || _a === void 0 ? void 0 : _a.forEach(function (element) {
                if (element.selected) {
                    _this.filterSelected = element.value;
                }
            });
        };
        NextiLibDatatableComponent.prototype.ngOnChanges = function (changes) {
            var list = changes.list;
            if ((list === null || list === void 0 ? void 0 : list.currentValue) !== (list === null || list === void 0 ? void 0 : list.previousValue)) {
                this.data$ = list === null || list === void 0 ? void 0 : list.currentValue;
                this.dataPerm$ = list === null || list === void 0 ? void 0 : list.currentValue;
                if (this.inputSearch)
                    this.inputSearch.nativeElement.value = '';
            }
        };
        NextiLibDatatableComponent.prototype.ngDoCheck = function () {
            var _this = this;
            var _a;
            (_a = this.datatable) === null || _a === void 0 ? void 0 : _a.forEach(function (element) {
                if (_this.footerConfig)
                    element.getFooterData();
            });
        };
        NextiLibDatatableComponent.prototype.onFilter = function () {
            this.onfilter.emit(this.filterSelected);
        };
        NextiLibDatatableComponent.prototype.onDeleteItem = function (item) {
            this.onDelete.emit(item);
        };
        NextiLibDatatableComponent.prototype.onUpdateItem = function (item) {
            this.onUpdate.emit(item);
        };
        NextiLibDatatableComponent.prototype.onActiveItem = function (item) {
            this.onActive.emit(item);
        };
        NextiLibDatatableComponent.prototype.onShowItem = function (item) {
            this.onShow.emit(item);
        };
        NextiLibDatatableComponent.prototype.onShowItemEvent = function ($event) {
            this.onShowEvent.emit($event);
        };
        NextiLibDatatableComponent.prototype.onlyNumbers = function (event) {
            return event.charCode >= 48 && event.charCode <= 57;
        };
        NextiLibDatatableComponent.prototype.customSearchBancoFn = function (term, item) {
            term = term.toLowerCase();
            return item.bancorresponsal.toLowerCase().includes(term);
        };
        NextiLibDatatableComponent.prototype.customSearchCompaniesFn = function (term, item) {
            term = term.toLowerCase();
            return (item.ruc.includes(term) || item.razonSocial.toLowerCase().includes(term));
        };
        NextiLibDatatableComponent.prototype.filter = function (search) {
            var e_1, _b;
            if (this.multiTable) {
                var datafilter = [];
                try {
                    for (var _c = __values(this.dataPerm$), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var list = _d.value;
                        var data = this.filterList(list, search);
                        datafilter.push(data);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                this.data$ = datafilter;
            }
            else {
                this.data$ = this.filterList(this.dataPerm$, search);
            }
        };
        NextiLibDatatableComponent.prototype.filterList = function (list, search) {
            var _this = this;
            return list.filter(function (lista) {
                var e_2, _b;
                try {
                    for (var lista_1 = __values(lista), lista_1_1 = lista_1.next(); !lista_1_1.done; lista_1_1 = lista_1.next()) {
                        var row = lista_1_1.value;
                        if (typeof row === 'object') {
                            if ((row.title && _this.toCompareString(row.title, search)) ||
                                (row.subtitle && _this.toCompareString(row.subtitle, search))) {
                                return lista;
                            }
                        }
                        else if (_this.toCompareString(row, search)) {
                            return lista;
                        }
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (lista_1_1 && !lista_1_1.done && (_b = lista_1.return)) _b.call(lista_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            });
        };
        NextiLibDatatableComponent.prototype.toCompareString = function (item, search) {
            return item
                .toString()
                .toUpperCase()
                .includes(search.toString().toUpperCase());
        };
        NextiLibDatatableComponent.prototype.getReportHeader = function () {
            var customHeader = this.reportConfig.customHeader;
            return customHeader
                ? customHeader
                : this.header.map(function (item) {
                    if (typeof item === 'object') {
                        return item.title;
                    }
                    else {
                        return item;
                    }
                });
        };
        NextiLibDatatableComponent.prototype.getFormatDataToTreatment = function (item) {
            if (typeof item === 'object') {
                if (item != null) {
                    if (item.title && item.subtitle) {
                        return item.title + "\n" + item.subtitle;
                    }
                    else {
                        return item.title ? item.title : item.subtitle && item.subtitle;
                    }
                }
                else {
                    return '';
                }
            }
            else {
                return item;
            }
        };
        NextiLibDatatableComponent.prototype.getRawData = function (customTotalRows, formatedData, customTotalType, rawDataRow) {
            var _this = this;
            if (customTotalRows && customTotalRows.length) {
                customTotalRows.forEach(function (customIndex, indexCol) {
                    formatedData.forEach(function (item, index) {
                        if (customIndex === index) {
                            var returnItem_1 = 0;
                            customTotalType.forEach(function (type, indexType) {
                                if (indexCol === indexType) {
                                    switch (type) {
                                        case FormatType$1.NUM:
                                            if ((typeof item === 'string' &&
                                                (item == '--' || item === '')) ||
                                                typeof item === 'undefined') {
                                                returnItem_1 = 0;
                                            }
                                            else {
                                                returnItem_1 = Number(item);
                                            }
                                            break;
                                        case FormatType$1.CUR:
                                            if ((typeof item === 'string' &&
                                                (item == '--' || item === '')) ||
                                                typeof item === 'undefined') {
                                                returnItem_1 = 0;
                                            }
                                            else {
                                                returnItem_1 = _this.formatCurrencyToNumber(item);
                                            }
                                            break;
                                        case FormatType$1.COU:
                                            if ((typeof item === 'string' &&
                                                (item == '--' || item === '')) ||
                                                typeof item === 'undefined') {
                                                returnItem_1 = 0;
                                            }
                                            else {
                                                returnItem_1 = 1;
                                            }
                                            break;
                                        default:
                                            returnItem_1 = 0;
                                    }
                                }
                            });
                            rawDataRow.push(returnItem_1);
                        }
                    });
                });
            }
        };
        NextiLibDatatableComponent.prototype.getReportBody = function () {
            var _this = this;
            var _b = this.reportConfig, customIndexRows = _b.customIndexRows, customTotalRows = _b.customTotalRows, customTotalFormatting = _b.customTotalFormatting, customTotalType = _b.customTotalType, footLabel = _b.footLabel;
            var tableData = [];
            var tableFooterData = [];
            var rawData = [];
            this.data$.forEach(function (itemArray) {
                var tableDataRow = [];
                var rawDataRow = [];
                // Step 1: format - prepare dat
                var formatedData = itemArray.map(function (item) { return _this.getFormatDataToTreatment(item); });
                // Step 2: Generate Filter data
                if (customIndexRows && customIndexRows.length) {
                    customIndexRows.forEach(function (customIndex) {
                        formatedData.forEach(function (item, index) {
                            if (customIndex === index) {
                                tableDataRow.push(item);
                            }
                        });
                    });
                }
                else {
                    tableDataRow = formatedData;
                }
                // Step 3: Get raw data (values to totals)
                _this.getRawData(customTotalRows, formatedData, customTotalType, rawDataRow);
                tableData.push(tableDataRow);
                rawData.push(rawDataRow);
            });
            if (customTotalRows && customTotalRows.length && rawData.length) {
                var procesedTotals_1 = [];
                procesedTotals_1 = this.trasposeMatrix(rawData).map(function (itemArray) { return itemArray.reduce(function (a, b) { return a + b; }, 0); });
                if (customTotalFormatting && customTotalFormatting.length) {
                    procesedTotals_1 = customTotalFormatting.map(function (format, index) {
                        switch (format) {
                            case NumberFormat$1.CUR:
                                return _this.currencyPipe.transform(procesedTotals_1[index]);
                            default:
                                return procesedTotals_1[index];
                        }
                    });
                }
                procesedTotals_1 = [__spread([footLabel], procesedTotals_1)];
                tableFooterData = procesedTotals_1.length ? procesedTotals_1 : null;
            }
            return {
                tableData: tableData,
                tableFooterData: tableFooterData,
            };
        };
        NextiLibDatatableComponent.prototype.generatePdf = function () {
            var pdf = new jsPDF.jsPDF();
            pdf.setProperties({
                title: 'Resultados Netos',
            });
            var _b = this.reportConfig, title = _b.title, subtitle = _b.subtitle, subject = _b.subject, sessionDate = _b.sessionDate, tableTitle = _b.tableTitle;
            var pageSize = pdf.internal.pageSize;
            var pageWidth = pageSize.width ? pageSize.width : pageSize.getWidth();
            // Section I
            pdf.autoTable({
                body: [
                    [title, this.datePipe.transform(Date.now(), 'dd/MM/yyyy HH:mm')],
                    [
                        {
                            content: subtitle,
                            colSpan: 2,
                            styles: { fontSize: 12, fontStyle: 'normal' },
                        },
                    ],
                ],
                showHead: false,
                theme: 'plain',
                styles: {
                    fillColor: [48, 84, 150],
                    textColor: 255,
                    valign: 'bottom',
                },
                columnStyles: {
                    0: { fontStyle: 'bold', fontSize: 13 },
                    1: { fontSize: 11, halign: 'right' },
                },
            });
            // Section II left
            var lastTableY = pdf.lastAutoTable.finalY + 5;
            pdf.autoTable({
                body: [[subject]],
                showHead: false,
                theme: 'plain',
                startY: lastTableY,
                styles: {
                    fillColor: [255, 255, 153],
                    textColor: 0,
                    valign: 'bottom',
                    fontSize: 11,
                    fontStyle: 'bold',
                    overflow: 'hidden',
                },
                margin: { right: 100 },
            });
            // Section II right
            pdf.autoTable({
                body: [
                    [
                        'SESION COMPENSACION:',
                        this.datePipe.transform(sessionDate, 'dd/MM/yy, HH:mm', 'UTC'),
                    ],
                ],
                showHead: false,
                theme: 'plain',
                startY: lastTableY,
                styles: {
                    fillColor: [255, 255, 153],
                    textColor: 0,
                    valign: 'bottom',
                    fontSize: 10,
                    overflow: 'hidden',
                },
                margin: { left: pageWidth - 90 },
                columnStyles: {
                    1: { halign: 'right' },
                },
            });
            // Section III
            pdf.autoTable({
                body: [[tableTitle]],
                showHead: false,
                theme: 'plain',
                startY: pdf.lastAutoTable.finalY + 10,
                styles: {
                    fillColor: [31, 78, 120],
                    textColor: 255,
                    valign: 'bottom',
                    fontSize: 11,
                    fontStyle: 'bold',
                },
            });
            var header = [this.getReportHeader()];
            var _c = this.getReportBody(), tableData = _c.tableData, tableFooterData = _c.tableFooterData;
            // Section IV
            var tableRenderObj = {
                head: header,
                body: tableData,
                theme: 'striped',
                showHead: 'firstPage',
                showFoot: 'lastPage',
                startY: pdf.lastAutoTable.finalY,
                headStyles: { fillColor: [214, 220, 228], textColor: 0 },
                footStyles: { fillColor: [31, 78, 120], textColor: 255 },
                foot: tableFooterData.length ? tableFooterData : false,
                styles: { fontSize: 9 },
            };
            pdf.autoTable(tableRenderObj);
            // Open PDF document in browser's new tab
            // pdf.output('pdfobjectnewwindow');
            pdf.save();
        };
        NextiLibDatatableComponent.prototype.generateTxt = function () {
            var header = this.getReportHeader();
            var options = {
                headers: header,
                fieldSeparator: ';',
                quoteStrings: '',
                decimalseparator: ',',
            };
            var _b = this.getReportBody(), tableData = _b.tableData, tableFooterData = _b.tableFooterData;
            tableData = __spread([header], tableData);
            tableData = tableFooterData.length
                ? __spread(tableData, tableFooterData) : tableData;
            var data = this.convertToJSON(tableData);
            new Angular2Txt.Angular2Txt(data, 'Resultados Netos', options);
        };
        NextiLibDatatableComponent.prototype.getFooterData = function () {
            var _this = this;
            var _b = this.footerConfig, customTotalRows = _b.customTotalRows, customTotalFormatting = _b.customTotalFormatting, customTotalType = _b.customTotalType, customTotalAlign = _b.customTotalAlign;
            var tableFooterData = [];
            var rawData = [];
            this.data$.forEach(function (itemArray) {
                var rawDataRow = [];
                // Step 1: format - prepare dat
                var formatedData = itemArray.map(function (item) { return _this.getFormatDataToTreatment(item); });
                // Step 2: Get raw data (values to totals)
                _this.getRawData(customTotalRows, formatedData, customTotalType, rawDataRow);
                rawData.push(rawDataRow);
            });
            if (customTotalRows && customTotalRows.length && rawData.length) {
                var procesedTotals_2 = [];
                procesedTotals_2 = this.trasposeMatrix(rawData).map(function (itemArray) { return itemArray.reduce(function (a, b) { return a + b; }, 0); });
                if (customTotalFormatting && customTotalFormatting.length) {
                    procesedTotals_2 = customTotalFormatting.map(function (format, index) {
                        var value, align;
                        switch (format) {
                            case NumberFormat$1.CUR:
                                value = _this.currencyPipe.transform(procesedTotals_2[index]);
                                break;
                            default:
                                value = procesedTotals_2[index];
                                break;
                        }
                        align = customTotalAlign[index];
                        return {
                            value: value,
                            align: align,
                        };
                    });
                }
                tableFooterData = procesedTotals_2.length ? procesedTotals_2 : null;
            }
            var finalFooterData = [];
            // Clear data
            if (customTotalRows && customTotalRows.length) {
                var cont_1 = 0;
                var _loop_1 = function (i) {
                    var itemToPush;
                    customTotalRows.forEach(function (customIndex) {
                        if (customIndex === i) {
                            itemToPush = tableFooterData[cont_1];
                            cont_1++;
                        }
                    });
                    finalFooterData.push(itemToPush);
                };
                for (var i = 0; i < this.header.length; i++) {
                    _loop_1(i);
                }
            }
            this.footerRow = finalFooterData;
        };
        NextiLibDatatableComponent.prototype.exportAsXLSX = function () {
            this.excelService.exportAsExcelFile(this.excelData, 'planilla_compensacion');
        };
        NextiLibDatatableComponent.prototype.formatCurrencyToNumber = function (value) {
            if (value !== undefined && value !== null)
                return Number(String(value).replace(/[^0-9.-]+/g, ''));
        };
        NextiLibDatatableComponent.prototype.isNumber = function (value) {
            var regex = /^\d*\.?\d*$/;
            return regex.test(value);
        };
        NextiLibDatatableComponent.prototype.trasposeMatrix = function (matrix) {
            return matrix[0].map(function (_, colIndex) { return matrix.map(function (row) { return row[colIndex]; }); });
        };
        NextiLibDatatableComponent.prototype.convertToJSON = function (array) {
            var objArray = [];
            for (var i = 1; i < array.length; i++) {
                objArray[i - 1] = {};
                for (var k = 0; k < array[0].length && k < array[i].length; k++) {
                    var key = array[0][k];
                    var actualElement = array[i][k];
                    var el = actualElement;
                    if (typeof actualElement === 'string') {
                        el = actualElement.replace(/\n/g, ' ');
                    }
                    else if (typeof actualElement === 'undefined') {
                        el = '';
                    }
                    objArray[i - 1][key] = el;
                }
            }
            return objArray;
        };
        NextiLibDatatableComponent.prototype.onBackItem = function () {
            this.onBack.emit();
        };
        return NextiLibDatatableComponent;
    }());
    NextiLibDatatableComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'nexti-lib-datatable',
                    template: "<div class=\"card py-4 px-2 border-light shadow-sm h-full mh-100\">\r\n  <div\r\n    *ngIf=\"isLoading\"\r\n    class=\"spinner-container d-flex align-items-center flex-column text-primary\"\r\n  >\r\n    <div class=\"spinner-border spinner-size\" role=\"status\"></div>\r\n    <span class=\"mt-2 text-dark\">Cargando...</span>\r\n  </div>\r\n  <div class=\"card-body content h-full mh-100\">\r\n    <div class=\"content-header\">\r\n      <div class=\"d-flex justify-content-between align-items-center\">\r\n        <div class=\"header-title\">\r\n          <div *ngIf=\"linkBack\">\r\n            <a class=\"btn primary\" (click)=\"onBackItem()\">\r\n              <h4>\r\n                <i aria-hidden=\"true\" class=\"bi bi-arrow-left back\"></i>\r\n              </h4>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <div *ngIf=\"breadcrumbs\">\r\n              <lib-breadcrumbs [breadcrumbs]=\"breadcrumbs\"></lib-breadcrumbs>\r\n            </div>\r\n            <div>\r\n              <h5 [ngClass]=\"{ 'title-primary': true, 'text-small': titleXs }\">\r\n                {{ title }}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ng-content></ng-content>\r\n          <button\r\n            *ngIf=\"reportConfig || excelData\"\r\n            type=\"button\"\r\n            class=\"btn btn-primary dropdown-toggle\"\r\n            data-bs-toggle=\"dropdown\"\r\n          >\r\n            Exportar a\r\n          </button>\r\n          <ul class=\"dropdown-menu\">\r\n            <ng-container *ngIf=\"!excelData; else showExcelOption\">\r\n              <li>\r\n                <a class=\"dropdown-item\" (click)=\"generatePdf()\">PDF</a>\r\n              </li>\r\n              <li>\r\n                <a class=\"dropdown-item\" (click)=\"generateTxt()\">TXT</a>\r\n              </li>\r\n            </ng-container>\r\n            <ng-template #showExcelOption>\r\n              <li>\r\n                <a class=\"dropdown-item\" (click)=\"exportAsXLSX()\">EXCEL</a>\r\n              </li>\r\n            </ng-template>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <ng-container *ngIf=\"customHeader; else headerOne\">\r\n        <ng-content select=\"[custom-header]\"></ng-content>\r\n      </ng-container>\r\n      <ng-template #headerOne>\r\n        <div class=\"d-flex justify-content-between align-items-center my-4\">\r\n          <div class=\"datos\">\r\n            <div *ngIf=\"infoAdicional\">\r\n              <lib-titlesecondary\r\n                [infoAdicional]=\"infoAdicional\"\r\n              ></lib-titlesecondary>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex flex-row\" *ngIf=\"!opOcultarBuscar\">\r\n            <div\r\n              class=\"px-2 py-auto d-flex align-items-center\"\r\n              *ngIf=\"selectFilter\"\r\n            >\r\n              <select\r\n                [(ngModel)]=\"filterSelected\"\r\n                (change)=\"onFilter()\"\r\n                class=\"form-select custom-select\"\r\n                aria-label=\"filter\"\r\n              >\r\n                <option\r\n                  *ngFor=\"let item of selectFilter\"\r\n                  [selected]=\"item.selected\"\r\n                  [value]=\"item.value\"\r\n                >\r\n                  {{ item.label }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <form class=\"d-flex\">\r\n              <div class=\"input-group custom-input-group\">\r\n                <input\r\n                  #search\r\n                  type=\"text\"\r\n                  class=\"form-control custom-input-search\"\r\n                  placeholder=\"Buscar\"\r\n                  aria-label=\"search\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  (keyup)=\"filter($event.target.value)\"\r\n                />\r\n                <span\r\n                  class=\"input-group-text custom-gruop-text\"\r\n                  id=\"basic-addon1\"\r\n                  ><i aria-hidden=\"true\" class=\"bi bi-search\"></i\r\n                ></span>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"multiTable; else oneTable\">\r\n      <div class=\"content-body\">\r\n        <nav class=\"nav-content\">\r\n          <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n            <button\r\n              *ngFor=\"let item of sections; index as i\"\r\n              class=\"nav-link\"\r\n              [ngClass]=\"{ active: i === 0 }\"\r\n              id=\"nav-{{ i }}-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              [attr.data-bs-target]=\"'#nav-' + i\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"nav-{{ i }}\"\r\n              aria-selected=\"true\"\r\n            >\r\n              {{ item }}\r\n            </button>\r\n          </div>\r\n        </nav>\r\n        <div class=\"tab-content\" id=\"nav-tabContent\">\r\n          <div\r\n            *ngFor=\"let item of header; index as i\"\r\n            [ngClass]=\"{ active: i === 0, show: i === 0 }\"\r\n            class=\"tab-pane fade\"\r\n            id=\"nav-{{ i }}\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"nav-{{ i }}-tab\"\r\n          >\r\n            <nexti-lib-table\r\n              [title]=\"title\"\r\n              [titleEmpty]=\"titleEmpty\"\r\n              [header]=\"item\"\r\n              [data$]=\"data$[i]\"\r\n              [footerConfig]=\"footerConfig[i]\"\r\n              [recursos]=\"recursos\"\r\n              [actionState]=\"actionState\"\r\n              (onDelete)=\"onDeleteItem($event)\"\r\n              (onUpdate)=\"onUpdateItem($event)\"\r\n              (onActive)=\"onActiveItem($event)\"\r\n              (onShow)=\"onShowItem($event)\"\r\n              (onShowEvent)=\"onShowItemEvent($event)\"\r\n              [opOcultarFooter]=\"opOcultarFooter\"\r\n              [hiddenActions]=\"hiddenActions\"\r\n              [isLoading]=\"isLoading\"\r\n              [paginacion]=\"paginacion\"\r\n              [totalRegistros]=\"totalRegistros\"\r\n              [multFPP]=\"multFPP\"\r\n              [actualPage]=\"actualPage\"\r\n              (onNext)=\"onNext()\"\r\n              (onReturn)=\"onReturn()\"\r\n            ></nexti-lib-table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <ng-template #oneTable>\r\n      <div class=\"content-onebody\">\r\n        <nexti-lib-table\r\n          [title]=\"title\"\r\n          [titleEmpty]=\"titleEmpty\"\r\n          [header]=\"header\"\r\n          [data$]=\"data$\"\r\n          [footerConfig]=\"footerConfig\"\r\n          [recursos]=\"recursos\"\r\n          [actionState]=\"actionState\"\r\n          (onDelete)=\"onDeleteItem($event)\"\r\n          (onUpdate)=\"onUpdateItem($event)\"\r\n          (onActive)=\"onActiveItem($event)\"\r\n          (onShow)=\"onShowItem($event)\"\r\n          (onShowEvent)=\"onShowItemEvent($event)\"\r\n          [opOcultarFooter]=\"opOcultarFooter\"\r\n          [hiddenActions]=\"hiddenActions\"\r\n          [isLoading]=\"isLoading\"\r\n          [paginacion]=\"paginacion\"\r\n          [totalRegistros]=\"totalRegistros\"\r\n          [actualPage]=\"actualPage\"\r\n          [multFPP]=\"multFPP\"\r\n          (onNext)=\"onNext($event)\"\r\n          (onReturn)=\"onReturn($event)\"\r\n        ></nexti-lib-table>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n",
                    styles: ["@import \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\";.header-title{display:flex;flex-direction:row}.tab-content{grid-area:tab-content;overflow:hidden}.tab-pane{height:100%}.breadcrumbs{margin:0;padding:0;font-size:12px;line-height:15px;color:#0f1b32}.breadcrumbs span{color:#b0b0b0}.mh-150{min-width:150px}.datos{padding-top:5px}.datos .nombre-banco{font-weight:700;font-size:16px;line-height:20px}.datos .informacion,.datos .nombre-banco{font-style:normal;display:flex;align-items:center;color:#0f1b32}.datos .informacion{font-weight:400;font-size:12px;line-height:15px}.custom-input-group{width:230px}.custom-input-search{border-right:none}.custom-input-search:focus{box-shadow:none;border-color:#ced4da}.custom-gruop-text{background:transparent}.primary{color:#0f1b32}.secondary{color:#2a8bf2}.muted{color:#585858}.mh-100{height:100%!important;max-height:100%!important}.title-primary{font-size:28px!important}.title-primary,h6{font-weight:700!important;color:#0f1b32}.btn.dropdown-toggle{display:block}a.dropdown-item{cursor:pointer}.text-size-sm{font-size:12px}.content{display:grid;width:100%;height:100%;grid-template-rows:auto 1fr;grid-template-areas:\"content-header\" \"content-body\"}.content-header{grid-area:content-header;padding:1rem 0}.content-body{grid-area:content-body;overflow:hidden;display:grid;width:100%;height:100%;grid-template-rows:auto 1fr;grid-template-areas:\"nav-content\" \"tab-content\"}.content-onebody{grid-area:content-body;overflow:hidden}.nav-content{grid-area:nav-content}.text-small{font-size:1.25rem!important}.page-container{position:relative}.page-container .spinner-container{position:absolute;z-index:100;left:50%;top:1vw}.page-container .spinner-container .spinner-size{width:3rem;height:3rem}"]
                },] }
    ];
    NextiLibDatatableComponent.ctorParameters = function () { return [
        { type: i1.DatePipe },
        { type: i1.CurrencyPipe },
        { type: ExcelService }
    ]; };
    NextiLibDatatableComponent.propDecorators = {
        header: [{ type: i0.Input }],
        customHeader: [{ type: i0.Input }],
        list: [{ type: i0.Input }],
        titleEmpty: [{ type: i0.Input }],
        title: [{ type: i0.Input }],
        titleXs: [{ type: i0.Input }],
        btnModal: [{ type: i0.Input }],
        recursos: [{ type: i0.Input }],
        selectFilter: [{ type: i0.Input }],
        hiddenActions: [{ type: i0.Input }],
        breadcrumbs: [{ type: i0.Input }],
        infoAdicional: [{ type: i0.Input }],
        linkBack: [{ type: i0.Input }],
        reportConfig: [{ type: i0.Input }],
        opOcultarBuscar: [{ type: i0.Input }],
        opOcultarFooter: [{ type: i0.Input }],
        footerConfig: [{ type: i0.Input }],
        actionState: [{ type: i0.Input }],
        paginacion: [{ type: i0.Input }],
        totalRegistros: [{ type: i0.Input }],
        multFPP: [{ type: i0.Input }],
        actualPage: [{ type: i0.Input }],
        excelData: [{ type: i0.Input }],
        multiTable: [{ type: i0.Input }],
        sections: [{ type: i0.Input }],
        isLoading: [{ type: i0.Input }],
        onDelete: [{ type: i0.Output }],
        onUpdate: [{ type: i0.Output }],
        onActive: [{ type: i0.Output }],
        onShow: [{ type: i0.Output }],
        onShowEvent: [{ type: i0.Output }],
        onBack: [{ type: i0.Output }],
        onfilter: [{ type: i0.Output }],
        onNext: [{ type: i0.Output }],
        onReturn: [{ type: i0.Output }],
        inputSearch: [{ type: i0.ViewChild, args: ['search',] }],
        datatable: [{ type: i0.ViewChildren, args: [TableComponent,] }]
    };

    var BreadcrumbsComponent = /** @class */ (function () {
        function BreadcrumbsComponent() {
            this.breadcrumbs = [];
        }
        BreadcrumbsComponent.prototype.ngOnInit = function () {
        };
        return BreadcrumbsComponent;
    }());
    BreadcrumbsComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'lib-breadcrumbs',
                    template: "\r\n<ul class=\"navega\">\r\n    <li *ngFor=\"let item of breadcrumbs\">\r\n        <a *ngIf=\"item.link\" href=\"{{item.link}}\">{{item.title}}</a>\r\n        <span *ngIf=\"!item.link\">{{item.title}}</span>\r\n    </li>\r\n</ul>\r\n",
                    styles: [".breadcrumbs{margin:0;padding:0;font-size:12px;line-height:15px;color:#0f1b32}.breadcrumbs span{color:#b0b0b0}.navega{padding:0;margin:0;display:flex;list-style:none}.navega li{margin:0;padding-right:3px;font-size:12px;line-height:15px}.navega a{color:#0f1b32;text-decoration:none}.navega span{color:#b0b0b0}"]
                },] }
    ];
    BreadcrumbsComponent.ctorParameters = function () { return []; };
    BreadcrumbsComponent.propDecorators = {
        breadcrumbs: [{ type: i0.Input }]
    };

    var TitlesecondaryComponent = /** @class */ (function () {
        function TitlesecondaryComponent() {
            this.infoAdicional = [];
            this.title = '';
            this.subtitle = '';
        }
        TitlesecondaryComponent.prototype.ngOnChanges = function (changes) {
            var _a, _b;
            var infoAdicional = changes.infoAdicional;
            if ((infoAdicional === null || infoAdicional === void 0 ? void 0 : infoAdicional.currentValue) !== (infoAdicional === null || infoAdicional === void 0 ? void 0 : infoAdicional.previousValue)) {
                this.title = (_a = this.infoAdicional[0]) === null || _a === void 0 ? void 0 : _a.title;
                this.subtitle = (_b = this.infoAdicional[0]) === null || _b === void 0 ? void 0 : _b.subtitle;
            }
        };
        TitlesecondaryComponent.prototype.ngOnInit = function () {
            var _a, _b;
            this.title = (_a = this.infoAdicional[0]) === null || _a === void 0 ? void 0 : _a.title;
            this.subtitle = (_b = this.infoAdicional[0]) === null || _b === void 0 ? void 0 : _b.subtitle;
        };
        return TitlesecondaryComponent;
    }());
    TitlesecondaryComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'lib-titlesecondary',
                    template: "<h5 class=\"nombre-banco\">{{ title }}</h5>\r\n<p class=\"informacion\">\r\n  {{ subtitle }}\r\n</p>\r\n",
                    styles: [".nombre-banco{font-weight:700;font-size:16px;line-height:20px}.informacion,.nombre-banco{font-style:normal;display:flex;align-items:center;color:#0f1b32}.informacion{font-weight:400;font-size:12px;line-height:15px}"]
                },] }
    ];
    TitlesecondaryComponent.ctorParameters = function () { return []; };
    TitlesecondaryComponent.propDecorators = {
        infoAdicional: [{ type: i0.Input }]
    };

    var NextiLibDatatableModule = /** @class */ (function () {
        function NextiLibDatatableModule() {
        }
        return NextiLibDatatableModule;
    }());
    NextiLibDatatableModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        NextiLibDatatableComponent,
                        BreadcrumbsComponent,
                        TitlesecondaryComponent,
                        TableComponent,
                    ],
                    imports: [forms.FormsModule, i1.CommonModule, ngSelect.NgSelectModule],
                    exports: [NextiLibDatatableComponent],
                    providers: [i1.DatePipe, i1.CurrencyPipe],
                },] }
    ];

    /*
     * Public API Surface of nexti-lib-datatable
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NextiLibDatatableComponent = NextiLibDatatableComponent;
    exports.NextiLibDatatableModule = NextiLibDatatableModule;
    exports.ɵa = TableComponent;
    exports.ɵb = ExcelService;
    exports.ɵc = BreadcrumbsComponent;
    exports.ɵd = TitlesecondaryComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=nexti-lib-datatable.umd.js.map
