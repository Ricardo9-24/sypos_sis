{"version":3,"file":"ng-qrcode.mjs","sources":["../../../projects/ng-qrcode/src/lib/qr-code.directive.ts","../../../projects/ng-qrcode/src/lib/qr-code.component.ts","../../../projects/ng-qrcode/src/lib/qr-code.module.ts","../../../projects/ng-qrcode/src/public-api.ts","../../../projects/ng-qrcode/src/ng-qrcode.ts"],"sourcesContent":["import { Directive, Input, isDevMode, OnChanges, ViewContainerRef } from \"@angular/core\"\nimport qrcode from \"qrcode\"\nimport { QrCodeErrorCorrectionLevel, RGBAColor } from \"./types\"\n\nconst validColorRegex = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: `canvas[qrCode]`,\n})\nexport class QrCodeDirective implements OnChanges {\n\n  static readonly DEFAULT_ERROR_CORRECTION_LEVEL: QrCodeErrorCorrectionLevel = \"M\"\n  static readonly DEFAULT_CENTER_IMAGE_SIZE = 40\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCode\") value!: string\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeVersion\") version?: number\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeErrorCorrectionLevel\") errorCorrectionLevel: QrCodeErrorCorrectionLevel = QrCodeDirective.DEFAULT_ERROR_CORRECTION_LEVEL\n\n  @Input() width?: number\n  @Input() height?: number\n  @Input() darkColor: RGBAColor = \"#000000FF\"\n  @Input() lightColor: RGBAColor = \"#FFFFFFFF\"\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeCenterImageSrc\") centerImageSrc?: string\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeCenterImageWidth\") centerImageWidth?: number | string\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeCenterImageHeight\") centerImageHeight?: number | string\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input(\"qrCodeMargin\") margin = 16\n\n  private centerImage?: HTMLImageElement\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n  ) {\n  }\n\n  async ngOnChanges() {\n    if (!this.value) {\n      return\n    }\n\n    if (this.version && this.version > 40) {\n      console.warn(\"[qrCode] max version is 40, clamping\")\n      this.version = 40\n    } else if (this.version && this.version < 1) {\n      console.warn(\"[qrCode] min version is 1, clamping\")\n      this.version = 1\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\"[qrCode] version should be set to a number, defaulting to auto\")\n      this.version = undefined\n    }\n\n    const canvas = this.viewContainerRef.element.nativeElement as HTMLCanvasElement | null\n\n    if (!canvas) {\n      // native element not available on server side rendering\n      return\n    }\n\n    const context = canvas.getContext(\"2d\")\n\n    if (context) {\n      context.clearRect(0, 0, context.canvas.width, context.canvas.height)\n    }\n\n    const errorCorrectionLevel = this.errorCorrectionLevel ?? QrCodeDirective.DEFAULT_ERROR_CORRECTION_LEVEL\n\n    const dark = validColorRegex.test(this.darkColor) ? this.darkColor : undefined\n    const light = validColorRegex.test(this.lightColor) ? this.lightColor : undefined\n\n    if (isDevMode()) {\n      if (!dark && this.darkColor) {\n        console.error(\"[ng-qrcode] darkColor set to invalid value, must be RGBA hex color string, eg: #3050A1FF\")\n      }\n\n      if (!light && this.lightColor) {\n        console.error(\"[ng-qrcode] lightColor set to invalid value, must be RGBA hex color string, eg: #3050A130\")\n      }\n    }\n    await qrcode\n      .toCanvas(canvas, this.value, {\n        version: this.version,\n        errorCorrectionLevel,\n        width: this.width,\n        margin: this.margin,\n        color: {\n          dark,\n          light,\n        },\n      })\n\n    const centerImageSrc = this.centerImageSrc\n    const centerImageWidth = getIntOrDefault(this.centerImageWidth, QrCodeDirective.DEFAULT_CENTER_IMAGE_SIZE)\n    const centerImageHeight = getIntOrDefault(this.centerImageHeight, QrCodeDirective.DEFAULT_CENTER_IMAGE_SIZE)\n\n    if (centerImageSrc && context) {\n\n      if (!this.centerImage) {\n        this.centerImage = new Image(centerImageWidth, centerImageHeight)\n      }\n\n      if (centerImageSrc !== this.centerImage?.src) {\n        this.centerImage.src = centerImageSrc\n      }\n\n      if (centerImageWidth !== this.centerImage.width) {\n        this.centerImage.width = centerImageWidth\n      }\n\n      if (centerImageHeight !== this.centerImage.height) {\n        this.centerImage.height = centerImageHeight\n      }\n\n      const centerImage = this.centerImage\n\n      centerImage.onload = () => {\n        context.drawImage(\n          centerImage,\n          canvas.width / 2 - centerImageWidth / 2,\n          canvas.height / 2 - centerImageHeight / 2, centerImageWidth, centerImageHeight,\n        )\n      }\n    }\n\n  }\n\n}\n\nfunction getIntOrDefault(value: string | number | undefined, defaultValue: number): number {\n  if (value === undefined || value === \"\") {\n    return defaultValue\n  }\n\n  if (typeof value === \"string\") {\n    return parseInt(value, 10)\n  }\n\n  return value\n}\n","import { Component, Input } from \"@angular/core\"\nimport { QrCodeErrorCorrectionLevel, RGBAColor } from \"./types\"\n\n@Component({\n  selector: \"qr-code\",\n  template: `\n    <canvas *ngIf=\"value\"\n            [qrCode]=\"value\"\n            [qrCodeErrorCorrectionLevel]=\"errorCorrectionLevel\"\n            [qrCodeCenterImageSrc]=\"centerImageSrc\"\n            [qrCodeCenterImageWidth]=\"centerImageSize\"\n            [qrCodeCenterImageHeight]=\"centerImageSize\"\n            [qrCodeMargin]=\"margin\"\n            [width]=\"size\"\n            [height]=\"size\"\n            [darkColor]=\"darkColor\"\n            [lightColor]=\"lightColor\"\n    >\n    </canvas>\n  `,\n  styles: [],\n})\nexport class QrCodeComponent {\n\n  @Input()\n  value?: string\n\n  @Input()\n  size?: string | number\n\n  @Input()\n  darkColor?: RGBAColor\n\n  @Input()\n  lightColor?: RGBAColor\n\n  @Input()\n  errorCorrectionLevel?: QrCodeErrorCorrectionLevel\n\n  @Input()\n  centerImageSrc?: string\n\n  @Input()\n  centerImageSize?: string | number\n\n  @Input()\n  margin?: number\n\n}\n","import { CommonModule } from \"@angular/common\"\nimport { NgModule } from \"@angular/core\"\nimport { QrCodeComponent } from \"./qr-code.component\"\nimport { QrCodeDirective } from \"./qr-code.directive\"\n\n@NgModule({\n  declarations: [\n    QrCodeComponent,\n    QrCodeDirective,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    QrCodeComponent,\n    QrCodeDirective,\n  ],\n})\nexport class QrCodeModule {\n}\n","/*\n * Public API Surface of ng-qrcode\n */\n\nexport * from \"./lib/qr-code.component\"\nexport * from \"./lib/qr-code.directive\"\nexport * from \"./lib/qr-code.module\"\nexport * from \"./lib/types\"\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.QrCodeDirective"],"mappings":"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"}